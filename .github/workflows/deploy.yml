name: Deploy Backend to EC2

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ayating/taipei-day-trip

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy locally
        run: |
          # 停止並移除現有容器
          docker stop taipei-day-trip 2>/dev/null || true
          docker rm taipei-day-trip 2>/dev/null || true

          # 拉取最新映像檔
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          # 啟動新容器
          docker run -d \
            --name taipei-day-trip \
            --restart unless-stopped \
            -p 8000:8000 \
            -v /home/ubuntu/app/.env:/app/.env:ro \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          # 清理舊映像檔
          docker image prune -f

          # 等待服務啟動
          sleep 15

          # 檢查容器狀態
          if docker ps | grep -q taipei-day-trip; then
            echo "容器啟動成功"
          else
            echo "容器啟動失敗"
            docker logs taipei-day-trip
            exit 1
          fi
